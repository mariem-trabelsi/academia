/* tslint:disable */
/* eslint-disable */
/* Code generated by ng-openapi-gen DO NOT EDIT. */

import { HttpClient, HttpContext } from '@angular/common/http';
import { Injectable } from '@angular/core';
import { Observable } from 'rxjs';
import { map } from 'rxjs/operators';

import { BaseService } from '../base-service';
import { ApiConfiguration } from '../api-configuration';
import { StrictHttpResponse } from '../strict-http-response';

import { getFeedbacksByArticleId } from '../fn/feedback-controller/get-feedbacks-by-article-id';
import { GetFeedbacksByArticleId$Params } from '../fn/feedback-controller/get-feedbacks-by-article-id';
import { PageFeedback } from '../models/page-feedback';
import { createFeedback } from '../fn/feedback-controller/create-feedback';
import { CreateFeedback$Params } from '../fn/feedback-controller/create-feedback';
import { Feedback } from '../models/feedback';

@Injectable({ providedIn: 'root' })
export class FeedbackControllerService extends BaseService {
  constructor(config: ApiConfiguration, http: HttpClient) {
    super(config, http);
  }

  /** Path part for operation `getFeedbacksByArticleId()` */
  static readonly GetFeedbacksByArticleIdPath = '/feedbacks/article/{articleId}';

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `getFeedbacksByArticleId()` instead.
   *
   * This method doesn't expect any request body.
   */
  getFeedbacksByArticleId$Response(params: GetFeedbacksByArticleId$Params, context?: HttpContext): Observable<StrictHttpResponse<PageFeedback>> {
    return getFeedbacksByArticleId(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `getFeedbacksByArticleId$Response()` instead.
   *
   * This method doesn't expect any request body.
   */
  getFeedbacksByArticleId(params: GetFeedbacksByArticleId$Params, context?: HttpContext): Observable<PageFeedback> {
    return this.getFeedbacksByArticleId$Response(params, context).pipe(
      map((r: StrictHttpResponse<PageFeedback>): PageFeedback => r.body)
    );
  }

  /** Path part for operation `createFeedback()` */
  static readonly CreateFeedbackPath = '/feedbacks/article/{articleId}';

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `createFeedback()` instead.
   *
   * This method sends `application/json` and handles request body of type `application/json`.
   */
  createFeedback$Response(params: CreateFeedback$Params, context?: HttpContext): Observable<StrictHttpResponse<Feedback>> {
    return createFeedback(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `createFeedback$Response()` instead.
   *
   * This method sends `application/json` and handles request body of type `application/json`.
   */
  createFeedback(params: CreateFeedback$Params, context?: HttpContext): Observable<Feedback> {
    return this.createFeedback$Response(params, context).pipe(
      map((r: StrictHttpResponse<Feedback>): Feedback => r.body)
    );
  }

}
